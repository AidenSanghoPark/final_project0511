<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dsn.con">
	
	<select id="conEnd" parameterType="Map" resultType="dsn.contest.model.ConDTO">
		select * from
		(select rownum as rnum,a.* from
		(select * from f_client where c_datediff<![CDATA[>=]]>0 order by c_idx desc)a)b
		where rnum<![CDATA[>=]]>#{start}
		and rnum<![CDATA[<=]]>#{end} 
	</select>
	
	<select id="listSizeCnt" resultType="Integer">
		select count(*) from f_client where (select rownum as rnum,a.* from
		(select * from f_client order by c_idx desc)a)b
		where rnum<![CDATA[>=]]>#{start}
		and rnum<![CDATA[<]]>#{end}
	</select>
	
	<select id="ContestCnt" resultType="Integer">
		select count(*) from f_client where c_datediff<![CDATA[<]]>0
	</select>
	
	<select id="ContestCntEnd" resultType="Integer">
		select count(*) from f_client where c_datediff<![CDATA[>=]]>0
	</select>
	
	<update id="conCount" parameterType="Map">
	UPDATE 
		f_client
	SET
		C_READNUM = #{c_readnum} WHERE C_IDX= #{c_idx}
	</update>
	
	<select id="cateList" parameterType="Map" resultType="dsn.contest.model.ConDTO">
	    select * from
			(select rownum as rnum,a.* from
			(select * from f_client where c_cate=#{c_cate} and c_datediff<![CDATA[<]]>0 order by c_idx desc)a)b
			where rnum<![CDATA[>=]]>#{start}
			and rnum<![CDATA[<=]]>#{end} 
   	</select>
   
   	<select id="cateEnd" parameterType="Map" resultType="dsn.contest.model.ConDTO">
	    select * from
			(select rownum as rnum,a.* from
			(select * from f_client where c_cate=#{c_cate} and c_datediff<![CDATA[>=]]>0 order by c_idx desc)a)b
			where rnum<![CDATA[>=]]>#{start}
			and rnum<![CDATA[<=]]>#{end} 
   	</select>
   	 <select id="conContent" parameterType="Integer" resultType="dsn.contest.model.ConDTO">
      select
         *
      from
         f_client
      where
         c_idx=#{c_idx}
   </select>
   
   <select id="conContent2" parameterType="Integer" resultType="dsn.contest.model.ConDTO">
      select
         *
      from
         f_client
      where
         c_idx=#{c_idx}
   </select>
   
 	<update id="dateUp">
    UPDATE F_CLIENT SET C_DATEDIFF=TRUNC(SYSDATE-C_ENDDATE) WHERE C_DATEDIFF != 0
    </update>
   
	
	<select id="conList" parameterType="Map" resultType="dsn.contest.model.ConDTO">
	
		SELECT
			*
		FROM(
			SELECT
				ROWNUM AS RNUM
				, A.*
			FROM(
				SELECT
					*
				FROM 
					F_CLIENT
				WHERE C_DATEDIFF <![CDATA[<]]> 0
				ORDER BY
					C_IDX DESC
				)A
			)B
		WHERE
			RNUM <![CDATA[>=]]> #{start}
		AND
			RNUM <![CDATA[<=]]> #{end}
		AND <if test="searchType == 'title'">c_subject like '%'||#{keyword}||'%'</if>
			<if test="searchType == 'content'">c_deas like '%'||#{keyword}||'%'</if>
			<if test="searchType == 'titlecontent'">c_subject like '%'||#{keyword}||'%'
											 OR c_deas like '%'||#{keyword}||'%'</if>
			<if test="searchType == null or searchType ==''">1=1</if>
		
	</select>
	<select id="conInfo" parameterType="Integer" resultType="dsn.contest.model.ConDTO">
		SELECT
			*
		FROM
			F_CLIENT
		WHERE
			C_IDX = #{c_idx}
	</select>
	<insert id="contestJoin" parameterType="dsn.contest.model.DesignerConDTO">
		INSERT
			INTO
		F_DESIGNER
			VALUES(
			F_DESIGNER_D_IDX.NEXTVAL
			, #{u_idx}
			, #{d_name}
			, #{d_content}
			, #{d_img_1}
			, #{d_img_2}
			, SYSDATE
			, 0
			, 'N'
			, #{c_cate}
			, #{c_idx}
			)
	</insert>
	<insert id="addLogo" parameterType="dsn.contest.model.ConDTO">
		<selectKey keyProperty="c_idx" resultType="Integer" order="BEFORE">
			SELECT F_CLIENT_C_IDX.NEXTVAL AS C_IDX FROM DUAL
		</selectKey>
		INSERT INTO F_CLIENT
			  (C_IDX
			  , C_SUBJECT
			  , C_DEAS
			  , C_COMPANY
			  , C_CATE
			  , C_COLOR
			  , C_FILE
			  , C_NAME
			  , C_DETAILS
			  , C_IDEA
			  , C_READNUM
			  , C_PAY
			  , C_OPENDATE
			  , C_ENDDATE
			  , U_IDX
			  , C_BLOCK
			  , C_LOGO
			  , C_DATEDIFF
			  )
		VALUES(
			#{c_idx},
			#{c_subject},
			#{c_deas},
			#{c_company},
			#{c_cate},
			#{c_color},
			#{c_file},
			#{c_name},
			#{c_details},
			'idea',
			0,
			#{c_pay},
			sysdate,
			sysdate+7,
			#{u_idx},
			'N',
			#{c_logo},
			-1
		)	
	</insert>	
	<insert id="addLogoTrade" parameterType="dsn.trade.model.TrdDTO">
	<selectKey order="BEFORE" keyProperty="t_idx" resultType="Integer">
		SELECT T_IDX.NEXTVAL AS T_IDX FROM DUAL
	</selectKey>
		INSERT INTO F_TRADE
		VALUES(
			#{t_idx},
			#{u_idx},
			#{c_idx},
			#{t_pay},
			#{t_type},
			SYSDATE
		)
	</insert>
	<insert id="addNaming" parameterType="dsn.contest.model.ConDTO">
		<selectKey keyProperty="c_idx" resultType="Integer" order="BEFORE">
			SELECT F_CLIENT_C_IDX.NEXTVAL AS C_IDX FROM DUAL
		</selectKey>
		INSERT INTO 
			F_CLIENT
		(
			C_IDX
			,C_SUBJECT
			,C_DEAS
			,C_COMPANY
			,C_CATE
			,C_FILE
			,C_DETAILS
			,C_IDEA
			,C_PAY
			,C_OPENDATE
			,C_ENDDATE
			,U_IDX
			,C_BLOCK
		)
		VALUES(
			#{c_idx},
			#{c_subject},
			#{c_deas},
			#{c_company},
			#{c_cate},
			#{c_file},
			#{c_details},
			#{c_idea},
			#{c_pay},
			sysdate,
			sysdate+7,
			#{u_idx},
			'N'
		)	
	</insert>
	<insert id="addNamingTrade" parameterType="dsn.trade.model.TrdDTO">
	
	<selectKey order="BEFORE" keyProperty="t_idx" resultType="Integer">
		SELECT T_IDX.NEXTVAL AS T_IDX FROM DUAL
	</selectKey>
		INSERT INTO F_TRADE
		VALUES
		(
			#{t_idx},
			#{u_idx},
			#{c_idx},
			#{t_pay},
			#{t_type},
			SYSDATE
		)
	</insert>
	<insert id="addChar" parameterType="dsn.contest.model.ConDTO">
		<selectKey keyProperty="c_idx" resultType="Integer" order="BEFORE">
			SELECT F_CLIENT_C_IDX.NEXTVAL AS C_IDX FROM DUAL
		</selectKey>
		INSERT INTO 
			F_CLIENT
		(
			C_IDX
			,C_SUBJECT
			,C_DEAS
			,C_COMPANY
			,C_CATE
			,C_FILE
			,C_DETAILS
			,C_IDEA
			,C_PAY
			,C_OPENDATE
			,C_ENDDATE
			,U_IDX
			,C_BLOCK
		)
		VALUES(
			#{c_idx},
			#{c_subject},
			#{c_deas},
			#{c_company},
			#{c_cate},
			#{c_file},
			#{c_details},
			#{c_idea},
			#{c_pay},
			sysdate,
			sysdate+7,
			#{u_idx},
			'N'
		)	
	</insert>
	<insert id="addCharTrade" parameterType="dsn.trade.model.TrdDTO">
	<selectKey order="BEFORE" keyProperty="t_idx" resultType="Integer">
		SELECT T_IDX.NEXTVAL AS T_IDX FROM DUAL
	</selectKey>
		INSERT INTO F_TRADE
		VALUES
		(
			#{t_idx},
			#{u_idx},
			#{c_idx},
			#{t_pay},
			#{t_type},
			SYSDATE
		)
	</insert>
	<insert id="addPrint" parameterType="dsn.contest.model.ConDTO">
		<selectKey keyProperty="c_idx" resultType="Integer" order="BEFORE">
			SELECT F_CLIENT_C_IDX.NEXTVAL AS C_IDX FROM DUAL
		</selectKey>
		INSERT INTO 
			F_CLIENT
		(
			C_IDX
			,C_SUBJECT
			,C_DEAS
			,C_COMPANY
			,C_CATE
			,C_FILE
			,C_DETAILS
			,C_IDEA
			,C_PAY
			,C_OPENDATE
			,C_ENDDATE
			,U_IDX
			,C_BLOCK
		)
		VALUES(
			#{c_idx},
			#{c_subject},
			#{c_deas},
			#{c_company},
			#{c_cate},
			#{c_file},
			#{c_details},
			#{c_idea},
			#{c_pay},
			sysdate,
			sysdate+7,
			#{u_idx},
			'N'
		)	
	</insert>
	<insert id="addPrintTrade" parameterType="dsn.trade.model.TrdDTO">
	<selectKey order="BEFORE" keyProperty="t_idx" resultType="Integer">
		SELECT T_IDX.NEXTVAL AS T_IDX FROM DUAL
	</selectKey>
		INSERT INTO F_TRADE
		VALUES
		(
			#{t_idx},
			#{u_idx},
			#{c_idx},
			#{t_pay},
			#{t_type},
			SYSDATE
		)
	</insert>	
	<update id="updateTrd" parameterType="dsn.contest.model.ConDTO">
		UPDATE F_TRADE
		SET
		C_IDX = #{c_idx}
		WHERE T_IDX = #{t_idx}
	</update>
	
	<select id="conPart" parameterType="Integer" resultType="dsn.designer.model.DesignerDTO">
		select * from 
			(select rownum as rnum, a.* from
			(select * from f_designer where c_idx=#{c_idx} order by d_idx desc)a)b
		where
			rnum <![CDATA[>=]]> #{start}
		and
			rnum <![CDATA[<=]]> #{end}
	</select>
	
	<update id="designerWin" parameterType="Integer">
		update f_designer set
                     d_win=1
                      where d_idx = #{d_idx}
   </update>
   <update id="contestEnd" parameterType="Integer">
   		UPDATE
   			F_CLIENT
   		SET
   			C_DATEDIFF = 0
   		WHERE
   			C_IDX = #{c_idx}
   </update>
	<select id="myPageList" parameterType="Map" resultType="dsn.contest.model.ConDTO">
			select * from
			(select rownum as rnum,a.* from
			(select * from f_client where u_idx=#{u_idx} order by c_idx desc)a)b
			where rnum<![CDATA[>=]]>#{start} and rnum<![CDATA[<=]]>#{end}
  	</select>
  	<select id="contestContent" parameterType="Map" resultType="dsn.contest.model.DesignerConDTO">
  		SELECT
  			*
  		FROM
  			F_DESIGNER
  		WHERE
  			D_IDX = #{d_idx}
  		AND
  			c_idx = #{c_idx}
  	</select>
  	<insert id="payUpdate" parameterType="Map">
  		INSERT
			INTO
		F_ACCOUNT
			VALUES(
			A_IDX.NEXTVAL
			, #{u_idx}
			, '입금'
			, sysdate 
			, #{c_subject}
			, '상금적립'
			, #{a_amount}
			, NVL((SELECT 
            a_balance 
        FROM 
            f_account 
        WHERE a_idx = (SELECT max(a_idx) FROM f_account)
        
        and u_idx = #{uidx}),0)+#{amount}
			)
  	</insert>
  	
  	<select id="designerUser" resultType="Integer">
  		select u_idx from f_designer where d_idx = #{d_idx}
  	</select>
  	<select id="contestPay" resultType="Integer">
  		select c_pay from f_client where c_idx = #{c_idx}
  	</select>
  	
  	<select id="conPartContent" parameterType="Integer" resultType="dsn.designer.model.DesignerDTO">
			select * from f_designer where d_idx=#{d_idx}
	</select>
  	<select id="designInfo" resultType="Map">
  		select * from f_designer where d_idx = #{d_idx} and c_idx = #{c_idx}
  	</select>
  	<select id="joinSum" resultType="Integer">
  		SELECT
  			count(b.d_idx)
  		FROM
  			f_client a, f_designer b
  		WHERE
  			a.c_idx = #{c_idx}
  	</select>
  	<select id="nickname" parameterType="Integer" resultType="dsn.designer.model.DesignerDTO">
  		SELECT U_NICK FROM F_USER WHERE U_IDX=#{U_IDX}
  	</select>
</mapper>
